// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                        Int                       @default(autoincrement()) @id
  email                     String                    @unique
  username                  String
  password                  String
  spaces                    Spaces[]
  testimonialForms          TestimonialForm[]
  customerReview            CustomerReview[]
  createdAt                 DateTime                 @default(now())
}



model Spaces {
  id                        Int                       @default(autoincrement()) @id
  userId                    Int
  user                      User                      @relation(fields: [userId], references: [id])
  spaceName                 String
  url                       String
  testimonialForms          TestimonialForm[]
  createdAt                 DateTime                  @default(now())
  CustomerReview            CustomerReview[]

  @@unique([userId, id], name: "user_ID_space_ID")
}



model TestimonialForm  {
  id                        Int                     @default(autoincrement()) @id
  spaceId                   Int                 
  space                     Spaces                  @relation(fields: [spaceId], references: [id])
  adminId                   Int               
  admin                     User                    @relation(fields: [adminId], references: [id])
  questions                 String[]
  brandLogo                 String
  Name                      String
  Description               String
  customerReview            CustomerReview[]
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
  status                    status                  @default(Draft)

  @@index([spaceId, adminId])
}

enum status {
  Active
  Archived
  Draft
}

model CustomerReview {
  id                        Int                   @default(autoincrement()) @id
  testimonialFormsId        Int
  testimonialForms          TestimonialForm       @relation(fields: [testimonialFormsId], references: [id])
  spaceId                   Int        
  space                     Spaces                @relation(fields: [spaceId], references: [id])
  adminId                   Int
  admin                     User                  @relation(fields: [adminId], references: [id])
  textReview                String?
  customerImageUrl          String
  customerVideoUrl          String?
  customerName              String
  customerEmail             String
  stars                     Int
  jobTitle                  String
  approved                  Boolean               @default(false)
  customerCompany           String
  createdAt                 DateTime              @default(now())
}